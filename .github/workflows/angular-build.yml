# .github/workflows/ci-cd.yml

name: Angular CI/CD Build & Deploy # Changed name to reflect deploy job

on:
  push:
    branches:
      - main # Or 'master'
  pull_request:
    branches:
      - main # Or 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: |
          cd portfolio-app
          npm ci

      - name: Build Angular Application with Prerendering
        run: |
          cd portfolio-app
          npx ng build --configuration production --base-href /my-personal-dev-portfolio/ --prerender
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: portfolio-app-build
          # This path tells upload-artifact to take the *contents* of this folder
          # So the artifact itself will contain the 'browser' folder at its root
          path: portfolio-app/dist/portfolio-app
          # The 'dist' folder name might vary slightly based on your angular.json
          # It's usually 'dist/<your-app-name>'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # IMPORTANT: Grant write permission for the workflow to push to the repo

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: portfolio-app-build # Must match the 'name' given in the 'upload-artifact' step
          path: ./dist # Downloads the artifact to a folder named 'dist' in the current working directory of this job
          # After this, the structure will be ./dist/browser/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # *** CRITICAL CORRECTION HERE ***
          # The downloaded artifact is in ./dist, and it contains the 'browser' folder.
          # So, the actual content to publish is inside ./dist/browser.
          publish_dir: ./dist/browser
          publish_branch: gh-pages
          # Recommended for clean deployments to gh-pages
          force_orphan: true